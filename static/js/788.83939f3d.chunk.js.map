{"version":3,"file":"static/js/788.83939f3d.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Phonebook.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  flex-direction: column;\n  padding: ${props => props.theme.spacing(10)}; \n  \n`\n\nconst Title = styled.h2`\n  font-size: ${props => props.theme.spacing(10)};\n  margin-bottom: ${props => props.theme.spacing(5)};\n`\n\nexport { Wrap, Title }","import PropTypes from \"prop-types\";\nimport { Wrap, Title  } from \"./Section.styled\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <Wrap>\n      {title && <Title> {title} </Title>}\n      {children}\n    </Wrap>\n  )\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}\n\nexport { Section };","const selectContacts = state => state.contacts.items;\n\nconst selectIsLoading = state => state.contacts.isLoading;\n\nconst selectError = state => state.contacts.error;\n\nconst selectFilter = state => state.filter;\n\nexport { selectContacts, selectIsLoading, selectError, selectFilter } ","import styled from \"styled-components\";\nimport { Form, Field } from \"formik\";\n\n\nconst FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${props => props.theme.spacing(2)};\n  margin-bottom: ${props => props.theme.spacing(5)};\n`\n\nconst Label = styled.label`\n  //margin-right: ${props => props.theme.spacing(2)};\n  font-size: ${props => props.theme.spacing(6)};\n  line-height: 1.71;\n  color: ${props => props.theme.colors.secondaryColor};\n`\n\nconst Input = styled(Field)`\n  width: 280px;\n  height: ${props => props.theme.spacing(10)};\n  padding:${props => props.theme.spacing(2)};\n  border-radius: ${props => props.theme.spacing(2)};\n  border: ${props => `1px solid ${props.theme.colors.secondaryColor}`};\n\n  color: ${props => props.theme.colors.secondaryColor};\n  font-size:${props => props.theme.spacing(4)};\n  outline: 0;\n\n  &:focus {\n    border: ${props => `2px solid ${props.theme.colors.secondaryColor}`};\n    box-shadow: 24px 17px 39px -9px rgba(0,0,0,0.75);\n  }\n`\n\nconst ErrorText = styled.p`\n  color: ${props => props.theme.colors.errorColor};\n  font-size: ${props => props.theme.spacing(4)};\n`\n\nconst Button = styled.button`\n  display: inline;\n  width: 280px;\n  height: ${props => props.theme.spacing(10)};\n  padding: ${props => props.theme.spacing(2)};\n  border-radius: ${props => props.theme.spacing(2)};\n  background: linear-gradient(to right, rgb(247, 157, 0), rgb(100, 243, 140));\n  border: ${props => `1px solid ${props.theme.colors.primaryColor}`};\n\n  color: ${props => props.theme.colors.secondaryColor};\n\n  cursor: pointer;\n  font-size: ${props => props.theme.spacing(5)};\n\n  &:hover,\n  &:focus {\n    border: ${props => `2px solid ${props.theme.colors.secondaryColor}`}; \n    box-shadow: 24px 17px 39px -9px rgba(0,0,0,0.75);\n  }\n`\n\nexport { FormStyled, Label, Input, ErrorText, Button };","import { Formik, ErrorMessage } from \"formik\";\nimport * as yup from 'yup';\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectContacts } from \"redux/selectors\";\nimport { addContact } from \"redux/operations\";\nimport { FormStyled, Label, Input, Button, ErrorText } from \"./ContactForm.styled\";   \n\n\nconst ContactForm = () => {\n  \n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const patternName =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n  const patternNumber =\n    /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\n\n  const schema = yup.object().shape({\n    name: yup.string()\n      .min(3, \"Too short!\")\n      .max(18, \"Name too long!\")\n      .matches(\n        patternName,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n      .required(\"Required\"),\n    number: yup.string()\n      .matches(\n        patternNumber,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required(\"Required\"),\n  });\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={msg => <ErrorText>{msg}</ErrorText>}\n      />\n    )\n  }\n\n  const handleSubmitForm = (values, { resetForm }) => {\n    const newContact = {\n      createdAt: Date.now(),\n      name: values.name,\n      number: values.number,\n    };\n    if (contacts.find(contact => contact.name.toUpperCase() === values.name.toUpperCase())) {\n      alert(`${values.name} is already in contacts`)\n    } else {\n      try {\n        dispatch(addContact(newContact));\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    \n  }\n\n  return (\n    <Formik\n      initialValues={{name: '', number: ''}}\n      onSubmit={handleSubmitForm}\n      validationSchema={schema}\n    >\n      <FormStyled autoComplete=\"off\">\n        <Label htmlFor={nameInputId}>\n          Name\n        </Label>\n        <Input\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n        />\n        <FormError\n          name=\"name\"\n          render={msg => <ErrorText>{msg}</ErrorText>}\n        />\n        \n        <Label htmlFor={numberInputId}>\n          Number\n        </Label>\n        <Input\n          id={numberInputId}\n          type=\"tel\"\n          name=\"number\"\n        />\n        <FormError\n          name=\"number\"\n          render={msg => <ErrorText >{msg}</ErrorText>}\n        />\n\n        <Button type=\"submit\">\n          Add contact\n        </Button>\n      </FormStyled>\n    </Formik>\n  )\n}\n\nexport { ContactForm };","import styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${props => props.theme.spacing(2)};\n`\n\nconst Label = styled.label`\n  font-size: ${props => props.theme.spacing(6)};\n  line-height: 1.71;\n  color: ${props => props.theme.colors.secondaryColor};  \n\n`\n\nconst Input = styled.input`\n  width: 280px;\n  height: ${props => props.theme.spacing(10)};\n  padding: ${props => props.theme.spacing(2)};\n  border-radius: ${props => props.theme.spacing(2)} ;\n  border:${props => `1px solid ${props.theme.colors.secondaryColor}`}; \n\n  color: ${props => props.theme.colors.secondaryColor};  \n  font-size:${props => props.theme.spacing(4)};\n  outline: 0;\n\n  &:focus {\n    border: ${props => `2px solid ${props.theme.colors.secondaryColor}`}; \n    box-shadow: 24px 17px 39px -9px rgba(0,0,0,0.75);\n  }\n`\n\nexport { Wrap, Label, Input}","import { nanoid } from \"@reduxjs/toolkit\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilter } from \"redux/selectors\";\nimport { changeFilter } from \"redux/filterSlice\";\nimport {  Wrap, Label, Input } from \"./ContactFilter.styled\";\n\n\nconst ContactFilter = () => {\n  const nameInputValue = nanoid();\n\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  \n  const handleChangeFilter = e => {\n    dispatch(changeFilter(e.target.value));\n  }\n\n  return (\n    <Wrap>\n      <Label  htmlFor={nameInputValue}>\n        Find contacts by name\n      </Label>\n      <Input\n        id={nameInputValue}\n        type=\"text\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </Wrap>\n  )\n}\n\nexport { ContactFilter };","import styled from \"styled-components\";\n\nconst LoaderSpinner = styled.div`\n  display: flex;\n  align-items:center;\n  margin: 0 auto;\n  height: 120px;\n  width: 120px;\n`\n\nexport { LoaderSpinner };","import {  RotatingLines  } from 'react-loader-spinner';\nimport { LoaderSpinner } from \"./Loader.styled\";\n\nconst Loader = () => {\n  return (\n    <LoaderSpinner>\n      \n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"3\"\n        animationDuration=\"0.75\"\n        visible={true}\n      />\n      <p>Loading...</p>\n    </LoaderSpinner>\n  )\n}\n\nexport { Loader };","import styled from \"styled-components\";\n\nconst ContactInfo = styled.span`\n  font-size: ${props => props.theme.spacing(6)};\n  line-height: 1.3;\n  color: ${props => props.theme.colors.secondaryColor};\n`\n\nconst Button = styled.button`\n  margin-left: ${props => props.theme.spacing(2)};\n  padding: ${props => props.theme.spacing(2)};\n  border: ${props => `1px solid ${props.theme.colors.primaryAlfaColor}`}; \n  border-radius: ${props => props.theme.spacing(2)} ;\n  background: linear-gradient(to right, rgb(247, 157, 0), rgb(100, 243, 140));\n  color: ${props => props.theme.colors.secondaryColor};\n\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.secondaryColor};\n    color: ${props => props.theme.colors.primaryAlfaColor};\n    box-shadow: 10px 10px 28px -12px rgba(8,63,0,0.75);\n  }\n`\n\nexport { ContactInfo, Button };","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { ContactInfo, Button } from \"./ContactItem.styled\";\nimport { deleteContact } from \"redux/operations\";\n\nconst ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <ContactInfo> {contact.name} </ContactInfo>\n      <ContactInfo>  {contact.phone} </ContactInfo>\n      <Button\n        type=\"button\"\n        onClick={handleDeleteContact}\n      >\n        Delete\n      </Button>\n    </>\n  )\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  })\n}\n\nexport { ContactItem };","import styled from \"styled-components\";\n\nconst List = styled.ul`\n  padding:  ${props => props.theme.spacing(2)}; \n`\n\nconst Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: ${props => props.theme.spacing(3)}; \n  }\n`\n\nexport { List, Item };","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectIsLoading, selectError, selectFilter } from \"redux/selectors\";\nimport {  fetchContacts } from \"redux/operations\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { List, Item } from \"./ContactList.styled\";\n\n\nconst ContactList = () => {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const [visibleContacts, setVisibleContacts] = useState(contacts);\n\n  useEffect(() => {\n    setVisibleContacts(\n      contacts.filter(contact =>\n        contact.name.toUpperCase().trim().includes(filter.toUpperCase().trim())\n      )\n    );\n  }, [contacts, filter]);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && !error && <Loader />} \n      {error && <p>Sorry, something went wrong.</p>}\n      {visibleContacts && (\n        <List>\n          {visibleContacts.map(contact => (\n            <Item key={contact.id}>\n              \n              <ContactItem \n                contact={contact}             \n              />\n\n            </Item>\n          ))}\n        </List>\n      )}\n    </>\n  );\n}\n\nexport { ContactList }","//import { Helmet } from \"react-helmet\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactFilter } from \"components/ContactFilter/ContactFilter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { useDispatch,  } from \"react-redux\";\n//import { selectIsLoading } from \"redux/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/operations\";\nimport { Section } from \"components/Section/Section\";\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  //const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Section title=\"Phonebook\">\n      <ContactForm />\n      <ContactFilter />\n      <ContactList />\n    </Section>\n  )\n};\n\nexport default Phonebook;"],"names":["Wrap","styled","props","theme","spacing","Title","Section","title","children","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","FormStyled","Form","Label","colors","secondaryColor","Input","Field","ErrorText","errorColor","Button","primaryColor","ContactForm","dispatch","useDispatch","useSelector","nameInputId","nanoid","numberInputId","schema","yup","shape","name","min","max","matches","required","number","FormError","render","msg","initialValues","onSubmit","values","resetForm","newContact","createdAt","Date","now","find","contact","toUpperCase","alert","addContact","console","log","validationSchema","autoComplete","htmlFor","id","type","ContactFilter","nameInputValue","value","onChange","e","changeFilter","target","LoaderSpinner","Loader","strokeColor","strokeWidth","animationDuration","visible","ContactInfo","primaryAlfaColor","ContactItem","phone","onClick","deleteContact","List","Item","ContactList","useState","visibleContacts","setVisibleContacts","useEffect","trim","includes","fetchContacts","map"],"sourceRoot":""}